{"version":3,"sources":["webpack://project-catwalk-fec/./client/src/components/R-and-R/components/review-list/review-tile.jsx","webpack://project-catwalk-fec/./firebase/index.js","webpack://project-catwalk-fec/./client/src/components/R-and-R/components/review-list/review-form.jsx","webpack://project-catwalk-fec/./client/src/components/R-and-R/components/review-list/response-form.jsx","webpack://project-catwalk-fec/./client/src/components/R-and-R/components/review-list/reviews-list.jsx","webpack://project-catwalk-fec/./client/src/components/R-and-R/components/breakdown/overall-rating.jsx","webpack://project-catwalk-fec/./client/src/components/R-and-R/components/breakdown/review-spread.jsx","webpack://project-catwalk-fec/./client/src/components/R-and-R/r-and-r.jsx"],"names":["props","res","body","useState","date","helpfulness","helpful","setHelpful","photos","rating","ratingsRounded","Math","floor","recommend","response","reviewId","reviewerName","summary","yesClicked","setYesClicked","reportClicked","setReportClicked","purchased","show","setShow","thumbnailModal","setThumbnailModal","handleClose","thumbnails","length","map","image","Image","onClick","handleThumbnailClick","url","style","width","height","marginTop","src","rounded","thumbnail","Container","className","renderThumbnails","getStrings","text","max","newIndex","textStr","substring","valid","i","includes","Modal","onHide","backdrop","keyboard","dialogClassName","aria-labelledby","justifyContent","marginLeft","type","id","Card","color","border","stop","step","fractions","initialRating","readonly","quiet","emptySymbol","fullSymbol","key","JSON","stringify","summaryStr","remainingStr","fontSize","marginBottom","validateSummary","open","setOpen","bodyStr","Collapse","in","Button","block","size","variant","aria-controls","aria-expanded","validateBody","push","backgroundColor","params","axios","then","err","aria-hidden","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","setRating","name","setName","setSummary","setBody","email","setEmail","setRecommend","productId","setPhotos","bodyCounter","setBodyCounter","errors","setErrors","findFormErrors","newErrors","test","checkChar","str","callback","field","slice","Object","keys","checkError","useEffect","Form","label","value","onChange","as","Col","controlId","placeholder","e","target","isInvalid","muted","acceptedFiles","filesLimit","fileObjects","onAdd","photo","onDelete","filter","item","data","dropzoneText","showFileNames","preventDefault","promises","newPhotos","uploadTask","ref","file","put","Promise","resolve","reject","on","error","child","getDownloadURL","all","formattedPhotos","product_id","Boolean","characteristics","53846","53847","53848","53849","month","day","year","tile","random","toString","substr","Date","getMonth","getDate","getFullYear","recommended","div","document","getElementById","d","createElement","prepend","ReactDOM","renderNewTile","uploadImage","product","start","reviews","currentRender","setCurrentRender","getTiles","arr","review_id","reviewer_name","concat","href","marginRight","ratingBreakdown","recommendation","FillerBar","styled","display","position","populateBar","count","setCount","page","sort","setSort","setReviews","1","2","3","4","5","ratings","setRatings","percentRecommend","setPercentRecommend","totalRatings","setTotalRatings","mounted","useRef","results","current","nextRatings","nextTotal","forEach","review","margin","DropdownList","defaultValue","val","toLowerCase"],"mappings":"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","file":"235.bundle.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  Collapse,\r\n  Button,\r\n  Container,\r\n  Image,\r\n  Modal,\r\n} from 'react-bootstrap';\r\nimport Rating from 'react-rating';\r\nimport axios from 'axios';\r\n\r\nconst ReviewTile = (props) => {\r\n  const [{ body }] = useState(props); // review card body text\r\n  const [{ date }] = useState(props); // date reviewed\r\n  const [{ helpfulness }] = useState(props); // # of positive reviews (Yes (#))\r\n  const [helpful, setHelpful] = useState(helpfulness);\r\n  const [{ photos }] = useState(props);\r\n  const [{ rating }] = useState(props); // initial rating\r\n  const [ratingsRounded] = useState(() => Math.floor(rating * 4)); // rounding to nearest .25\r\n  const [{ recommend }] = useState(props);\r\n  const [{ response }] = useState(props);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [{ reviewId }] = useState(props);\r\n  const [{ reviewerName }] = useState(props);\r\n  const [{ summary }] = useState(props); // review card summary\r\n  const [yesClicked, setYesClicked] = useState(false); // if the user clicked Yes -> disable\r\n  const [reportClicked, setReportClicked] = useState(false); // ^^ disable report\r\n  const [purchased] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [thumbnailModal, setThumbnailModal] = useState(null);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleThumbnailClick = (image) => {\r\n    handleShow();\r\n    setThumbnailModal(image);\r\n  };\r\n\r\n  const renderThumbnails = () => {\r\n    if (photos.length > 0) {\r\n      const thumbnails = photos.map((image) => (\r\n        <Image\r\n          onClick={() => handleThumbnailClick(image.url)}\r\n          style={{\r\n            width: '100px',\r\n            height: 'auto',\r\n            marginTop: '10px',\r\n          }}\r\n          src={image.url}\r\n          rounded\r\n          thumbnail=\"true\"\r\n        />\r\n      ));\r\n      return (\r\n        <Container\r\n          style={{ height: '150px' }}\r\n          className=\"d-flex bd-highlight mb-3\"\r\n        >\r\n          {thumbnails}\r\n        </Container>\r\n      );\r\n    }\r\n    return <></>;\r\n  };\r\n  const [thumbnails] = useState(renderThumbnails());\r\n\r\n  const handleHelpfulClick = () => {\r\n    if (!yesClicked) {\r\n      setHelpful(helpful + 1);\r\n      setYesClicked(true);\r\n      const params = {\r\n        reviewId,\r\n      };\r\n      axios.get('reviews/helpfulness', { params })\r\n        .then(() => {\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleReport = () => {\r\n    if (!reportClicked) {\r\n      const params = {\r\n        reviewId,\r\n      };\r\n      axios.get('reviews/report', { params })\r\n        .then(() => {\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n      setReportClicked(true);\r\n    }\r\n  };\r\n\r\n  const getStrings = (text, max) => {\r\n    let textStr = text.substring(0, max);\r\n    let newIndex;\r\n    const valid = [' ', '!', '.', '?'];\r\n    for (let i = textStr.length; i >= 0; i -= 1) {\r\n      if (valid.includes(textStr[i])) {\r\n        newIndex = i;\r\n        textStr = textStr.substring(0, i);\r\n        break;\r\n      }\r\n    }\r\n    const remainingStr = text.substring(newIndex);\r\n    return [textStr, remainingStr];\r\n  };\r\n\r\n  const validateSummary = () => {\r\n    if (summary.length > 60) {\r\n      const [summaryStr, remainingStr] = getStrings(summary, 59);\r\n      const sub = (<strong>{`${summaryStr}...`}</strong>);\r\n      const remaining = (\r\n        <div\r\n          style={({\r\n            color: '#949494',\r\n            fontSize: '12px',\r\n            marginTop: '10px',\r\n            marginBottom: '20px',\r\n          })}\r\n        >\r\n          {`...${remainingStr}`}\r\n        </div>\r\n      );\r\n      return [sub, remaining];\r\n    }\r\n    return [<div><strong>{summary}</strong></div>];\r\n  };\r\n\r\n  const validateBody = () => {\r\n    const [open, setOpen] = useState(false);\r\n    if (body.length >= 250) {\r\n      const [bodyStr, remainingStr] = getStrings(body, 249);\r\n      return (\r\n        <div>\r\n          <div style={{ color: '#949494' }}>\r\n            { `${bodyStr}...` }\r\n          </div>\r\n          <Collapse in={open}>\r\n            <div>\r\n              <Card.Text\r\n                id=\"collapse-text\"\r\n                style={{ color: '#949494' }}\r\n              >\r\n                { remainingStr }\r\n              </Card.Text>\r\n            </div>\r\n          </Collapse>\r\n          <Button\r\n            block=\"true\"\r\n            size=\"sm\"\r\n            style={{ color: '#949494' }}\r\n            variant=\"link\"\r\n            onClick={() => setOpen(!open)}\r\n            aria-controls=\"collapse-text\"\r\n            aria-expanded={open}\r\n          >\r\n            Show More\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n    return body;\r\n  };\r\n\r\n  const validateRecommend = () => {\r\n    if (recommend) {\r\n      return (\r\n        <div id=\"recommends\">\r\n          <i\r\n            id=\"recommend-icon\"\r\n            className=\"bi bi-check2\"\r\n          />\r\n          <div className=\"ml-2\">\r\n            I recommend this product\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const verifiedPurchaser = () => {\r\n    if (purchased) {\r\n      return (\r\n        <div id=\"verified-purchaser\">\r\n          <i\r\n            id=\"verified-icon\"\r\n            className=\"bi bi-check-circle-fill\"\r\n          />\r\n          <div className=\"ml-2\">\r\n            Verified Purchaser\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const validateResponse = () => {\r\n    const res = [];\r\n    if (response) {\r\n      res.push(\r\n        <div\r\n          className=\"mt2\"\r\n          style={{ backgroundColor: '#ebebeb' }}\r\n          id=\"owner-response\"\r\n        >\r\n          <div style={{ color: '#454545' }}>\r\n            <strong>Response:</strong>\r\n          </div>\r\n          <div\r\n            className=\"mt-2\"\r\n            style={{ fontSize: '15px' }}\r\n          >\r\n            {response}\r\n          </div>\r\n        </div>,\r\n      );\r\n    }\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <div className=\"review-tile\">\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <div style={{ justifyContent: 'center' }}>\r\n          <Image\r\n            style={{\r\n              width: '100%',\r\n              height: 'auto',\r\n            }}\r\n            src={thumbnailModal}\r\n            rounded\r\n            thumbnail=\"true\"\r\n          />\r\n          <button\r\n            style={{\r\n              marginTop: '2%',\r\n              marginLeft: '5%',\r\n              width: '90%',\r\n              height: 'auto',\r\n            }}\r\n            type=\"button\"\r\n            onClick={handleClose}\r\n            id=\"review-button\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      <Card\r\n        style={{ color: '#525252' }}\r\n        border=\"0\"\r\n      >\r\n        <div id=\"star\">\r\n          <Rating\r\n            stop={20}\r\n            step={4}\r\n            fractions={4}\r\n            initialRating={ratingsRounded}\r\n            readonly=\"true\"\r\n            quiet=\"false\"\r\n            emptySymbol={(\r\n              <i\r\n                id=\"star-icon\"\r\n                className=\"bi bi-star\"\r\n              />\r\n            )}\r\n            fullSymbol={(\r\n              <i\r\n                id=\"star-icon\"\r\n                className=\"bi bi-star-fill\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div\r\n          id=\"user-container\"\r\n          className=\"d-inline-flex justify-content-end\"\r\n        >\r\n          <div\r\n            id=\"user-container-item\"\r\n            className=\"ml-3\"\r\n          >\r\n            {reviewerName}\r\n          </div>\r\n          ,\r\n          <div\r\n            id=\"user-container-item\"\r\n            className=\"ml-3\"\r\n          >\r\n            {date}\r\n          </div>\r\n          {verifiedPurchaser()}\r\n        </div>\r\n        <div\r\n          className=\"mt-3\"\r\n          id=\"review-text-container\"\r\n          key={JSON.stringify(photos)}\r\n        >\r\n          <Card.Title>\r\n            {validateSummary()}\r\n          </Card.Title>\r\n          { validateBody() }\r\n        </div>\r\n        { validateResponse() }\r\n        { validateRecommend() }\r\n        {thumbnails}\r\n        <div\r\n          style={{ color: '#949494' }}\r\n          className=\"d-inline-flex\"\r\n        >\r\n          <div className=\"mt-2\">\r\n            Was this helpful?\r\n          </div>\r\n          <a\r\n            style={{ color: '#949494' }}\r\n            id=\"helpful-yes\"\r\n            className=\"ml-auto p-2\"\r\n            onClick={handleHelpfulClick}\r\n            aria-hidden=\"true\"\r\n          >\r\n            <u>Yes</u>\r\n          </a>\r\n          <div className=\"mt-2\">\r\n            (\r\n            {helpful}\r\n            )\r\n          </div>\r\n          <div className=\"ml-auto p-2\">\r\n            |\r\n          </div>\r\n          <a\r\n            style={{ color: '#949494' }}\r\n            id=\"helpful-yes\"\r\n            className=\"ml-auto p-2\"\r\n            aria-hidden=\"true\"\r\n            onClick={handleReport}\r\n          >\r\n            <u>Report</u>\r\n          </a>\r\n        </div>\r\n      </Card>\r\n      <hr style={{ border: '1px solid black' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewTile;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBocgHVX-9CU6E3CG5_w2DAKs0UmxSb1_s',\r\n  authDomain: 'frontend--capstone.firebaseapp.com',\r\n  projectId: 'frontend--capstone',\r\n  storageBucket: 'frontend--capstone.appspot.com',\r\n  messagingSenderId: '363443525448',\r\n  appId: '1:363443525448:web:7e33f4f2034b8f1319c57d',\r\n  measurementId: 'G-06CQSHMVCB',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default };\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  Form,\r\n  Col,\r\n} from 'react-bootstrap';\r\nimport { DropzoneAreaBase } from 'material-ui-dropzone';\r\nimport axios from 'axios';\r\nimport ReviewTile from './review-tile';\r\nimport { storage } from '../../../../../../firebase/index';\r\n\r\nconst ReviewForm = (props) => {\r\n  const [rating, setRating] = useState(20);\r\n  const [name, setName] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [recommend, setRecommend] = useState(false);\r\n  const [{ productId }] = useState(props);\r\n  const [photos, setPhotos] = useState([]);\r\n  const [bodyCounter, setBodyCounter] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [{ handleClose }] = useState(props);\r\n\r\n  const validateEmail = () => {\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const newErrors = {};\r\n\r\n    if (!name || name === '') newErrors.name = 'invalid name!';\r\n    if (!email || !validateEmail()) newErrors.email = 'invalid email!';\r\n    if (!summary || summary === '' || summary.length > 60) newErrors.summary = 'invalid summary!';\r\n    if (!body || body === '' || body.length < 49) newErrors.body = 'invalid body!';\r\n    return newErrors;\r\n  };\r\n\r\n  const checkError = (field) => {\r\n    if (errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n      const newErrors = findFormErrors();\r\n      if (Object.keys(newErrors).length > 0) {\r\n        setErrors(newErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkChar = (str, max, callback, field) => {\r\n    callback(str.slice(0, max));\r\n    checkError(field);\r\n  };\r\n\r\n  const reset = () => {\r\n    setRating(20);\r\n    setName('');\r\n    setSummary('');\r\n    setBody('');\r\n    setEmail('');\r\n    setRecommend(false);\r\n    setPhotos([]);\r\n  };\r\n\r\n  const getDate = (date) => {\r\n    const monthNames = [\r\n      'January', 'February', 'March', 'April', 'May', 'June',\r\n      'July', 'August', 'September', 'October', 'November', 'December',\r\n    ];\r\n    const month = monthNames[date.getMonth() + 1];\r\n    const day = date.getDate();\r\n    const year = date.getFullYear();\r\n    return (`${month} ${day}, ${year}`);\r\n  };\r\n\r\n  const renderNewTile = (formattedPhotos) => {\r\n    const newPhotos = formattedPhotos.map((image) => ({ url: image }));\r\n    const tile = (\r\n      <ReviewTile\r\n        key={Math.random().toString(36).substr(2, 9)}\r\n        body={body}\r\n        date={getDate(new Date())}\r\n        helpfulness={0}\r\n        rating={rating}\r\n        photos={newPhotos}\r\n        recommended={recommend}\r\n        reviewerName={name}\r\n        summary={summary}\r\n        yesClicked={false}\r\n      />\r\n    );\r\n    const div = document.getElementById('reviews-tiles');\r\n    const id = Math.random();\r\n    const d = document.createElement('div');\r\n    d.id = id;\r\n    div.prepend(d);\r\n    ReactDOM.render(tile, document.getElementById(id));\r\n  };\r\n\r\n  const submitData = (formattedPhotos) => {\r\n    const params = {\r\n      product_id: productId,\r\n      rating: rating / 4,\r\n      summary,\r\n      body,\r\n      recommend: Boolean(recommend),\r\n      name,\r\n      email,\r\n      photos: formattedPhotos,\r\n      characteristics: {\r\n        53846: 5,\r\n        53847: 5,\r\n        53848: 3,\r\n        53849: 3,\r\n      },\r\n    };\r\n    renderNewTile(formattedPhotos);\r\n    axios.post('reviews', params)\r\n      .then(() => {\r\n        reset();\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n\r\n  const uploadImage = () => {\r\n    const promises = [];\r\n    const newPhotos = [];\r\n    for (let i = 0; i < photos.length; i += 1) {\r\n      const uploadTask = storage.ref(`images/${photos[i].file.name}`).put(photos[i].file);\r\n      promises.push(\r\n        new Promise((resolve, reject) => {\r\n          uploadTask.on(\r\n            'state_changed',\r\n            () => {},\r\n            (error) => {\r\n              reject(error);\r\n            },\r\n            () => {\r\n              storage\r\n                .ref('images')\r\n                .child(photos[i].file.name)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  newPhotos.push(url);\r\n                  resolve(url);\r\n                });\r\n            },\r\n          );\r\n        }),\r\n      );\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        submitData(newPhotos);\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n    } else {\r\n      uploadImage();\r\n    }\r\n  };\r\n\r\n  const renderBodyCount = () => {\r\n    if (body.length >= 50) {\r\n      setBodyCounter('Minimum reached');\r\n    } else {\r\n      setBodyCounter(`Minimum required characters left: ${50 - body.length}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => renderBodyCount(), [body]);\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Row>\r\n        <div style={{ marginTop: '10px' }}>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"default-checkbox\"\r\n            label=\"I recommend this item\"\r\n            value={recommend}\r\n            onChange={() => setRecommend(!recommend)}\r\n          />\r\n        </div>\r\n      </Form.Row>\r\n      <Form.Row>\r\n\r\n        <Form.Group\r\n          as={Col}\r\n          controlId=\"formGridName\"\r\n        >\r\n          <Form.Label>\r\n            <div style={{ marginTop: '20px' }}>\r\n              Name\r\n            </div>\r\n          </Form.Label>\r\n          <Form.Control\r\n            placeholder=\"jackson11!\"\r\n            value={name}\r\n            onChange={(e) => checkChar(e.target.value, 60, setName, 'name')}\r\n            type=\"name\"\r\n            isInvalid={!!errors.name}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.name}\r\n          </Form.Control.Feedback>\r\n          <Form.Text id=\"summaryHelpBlock\" muted>\r\n            For privacy reasons, do not use your full name or email address\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group\r\n          as={Col}\r\n          controlId=\"formGridEmail\"\r\n        >\r\n          <Form.Label>\r\n            <div style={{ marginTop: '20px' }}>\r\n              Email\r\n            </div>\r\n          </Form.Label>\r\n          <Form.Control\r\n            placeholder=\"jackson11@email.com\"\r\n            value={email}\r\n            onChange={(e) => checkChar(e.target.value, 60, setEmail, 'email')}\r\n            type=\"email\"\r\n            isInvalid={!!errors.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n          <Form.Text id=\"summaryHelpBlock\" muted>\r\n            For authentication reasons, you will not be emailed\r\n          </Form.Text>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"formGridSummary\">\r\n        <Form.Label>\r\n          <div style={{ marginTop: '20px' }}>\r\n            Summary\r\n          </div>\r\n        </Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Example: Best purchase ever!\"\r\n          onChange={(e) => checkChar(e.target.value, 60, setSummary, 'summary')}\r\n          value={summary}\r\n          isInvalid={!!errors.summary}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.summary}\r\n        </Form.Control.Feedback>\r\n        <Form.Text id=\"summaryHelpBlock\" muted>\r\n          Your summary must be 1-60 characters long.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formGridBody\">\r\n        <Form.Label>\r\n          <div style={{ marginTop: '20px' }}>\r\n            Review\r\n          </div>\r\n        </Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          placeholder=\"Why did you like the product or not?\"\r\n          onChange={(e) => checkChar(e.target.value, 1000, setBody, 'body')}\r\n          value={body}\r\n          isInvalid={!!errors.body}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.body}\r\n        </Form.Control.Feedback>\r\n        <Form.Text id=\"bodyHelpBlock\" muted>\r\n          {bodyCounter}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <DropzoneAreaBase\r\n          acceptedFiles={['image/*']}\r\n          filesLimit={5}\r\n          fileObjects={photos}\r\n          onAdd={(photo) => {\r\n            setPhotos(photo);\r\n          }}\r\n          onDelete={(photo) => {\r\n            setPhotos(photos.filter((item) => item.data !== photo.data));\r\n          }}\r\n          dropzoneText=\"Upload up to (5) images\"\r\n          showFileNames\r\n        />\r\n      </Form.Group>\r\n      <button\r\n        type=\"button\"\r\n        id=\"review-button\"\r\n        onClick={handleClose}\r\n      >\r\n        Close\r\n      </button>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={handleSubmit}\r\n        id=\"review-button\"\r\n      >\r\n        Submit Review\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Modal,\r\n} from 'react-bootstrap';\r\nimport Rating from 'react-rating';\r\nimport ReviewForm from './review-form';\r\n\r\nconst ResponseForm = (props) => {\r\n  const [rating, setRating] = useState(20);\r\n  const [{ product }] = useState(props);\r\n  const [{ productId }] = useState(props);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <div id=\"responseForm\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleShow}\r\n        id=\"review-button\"\r\n      >\r\n        ADD A REVIEW +\r\n      </button>\r\n      <div id=\"review-form\">\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              Write your review\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"show-grid\">\r\n            <h5>\r\n              About the\r\n              {` ${product}`}\r\n            </h5>\r\n            <div style={{ marginTop: '20px' }}>\r\n              <Rating\r\n                start={0}\r\n                stop={20}\r\n                step={4}\r\n                fractions={4}\r\n                initialRating={rating}\r\n                emptySymbol={(\r\n                  <i\r\n                    id=\"star-icon\"\r\n                    className=\"bi bi-star\"\r\n                  />\r\n                )}\r\n                fullSymbol={(\r\n                  <i\r\n                    id=\"star-icon\"\r\n                    className=\"bi bi-star-fill\"\r\n                  />\r\n                )}\r\n                onClick={(e) => setRating(e)}\r\n              />\r\n            </div>\r\n            <ReviewForm productId={productId} handleClose={handleClose} />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ResponseForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport ReviewTile from './review-tile';\r\nimport ResponseForm from './response-form';\r\n\r\nconst ReviewsList = (props) => {\r\n  const [{ reviews }] = useState(props);\r\n  const [{ product }] = useState(props);\r\n  const [{ productId }] = useState(props);\r\n  const [currentRender, setCurrentRender] = useState([]);\r\n  const getDate = (date) => {\r\n    const monthNames = [\r\n      'January', 'February', 'March', 'April', 'May', 'June',\r\n      'July', 'August', 'September', 'October', 'November', 'December',\r\n    ];\r\n    const month = monthNames[date.getMonth() + 1];\r\n    const day = date.getDate();\r\n    const year = date.getFullYear();\r\n    return (`${month} ${day}, ${year}`);\r\n  };\r\n\r\n  const getTiles = () => {\r\n    const arr = [];\r\n    if (reviews.length >= currentRender.length) {\r\n      for (let i = currentRender.length; i < currentRender.length + 2; i += 1) {\r\n        if (reviews[i]) {\r\n          arr.push(\r\n            <ReviewTile\r\n              key={Math.random().toString(36).substr(2, 9)}\r\n              body={reviews[i].body}\r\n              date={getDate(new Date(reviews[i].date))}\r\n              helpfulness={reviews[i].helpfulness}\r\n              photos={reviews[i].photos}\r\n              rating={reviews[i].rating}\r\n              recommended={reviews[i].recommended}\r\n              response={reviews[i].response}\r\n              reviewId={reviews[i].review_id}\r\n              reviewerName={reviews[i].reviewer_name}\r\n              summary={reviews[i].summary}\r\n              yesClicked={false}\r\n            />,\r\n          );\r\n        }\r\n      }\r\n      setCurrentRender(currentRender.concat(arr));\r\n    }\r\n  };\r\n  useEffect(() => getTiles(), []);\r\n\r\n  const showMoreButton = () => (\r\n    <div>\r\n      <a href=\"#review-button\" onClick={() => getTiles()} id=\"review-button\">SHOW MORE</a>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"reviews-list\">\r\n      <div id=\"reviews-tiles\">\r\n        {currentRender}\r\n      </div>\r\n      <div className=\"d-inline-flex mt-5\">\r\n        {showMoreButton()}\r\n        <ResponseForm\r\n          product={product}\r\n          productId={productId}\r\n          getDate={getDate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsList;\r\n","import React, { useState } from 'react';\r\n\r\nimport Rating from 'react-rating';\r\n\r\nconst OverallRating = (props) => {\r\n  const [{ rating }] = useState(props);\r\n  return (\r\n    <div className=\"d-inline-flex justify-content-end\">\r\n      <div id=\"overall-rating-average\">\r\n        <strong style={{\r\n          fontSize: '60px',\r\n          marginRight: '15px',\r\n        }}\r\n        >\r\n          {rating / 4}\r\n        </strong>\r\n      </div>\r\n      <div\r\n        style={{ marginTop: '20px' }}\r\n        id=\"overall-rating-star\"\r\n      >\r\n        <Rating\r\n          start={0}\r\n          stop={20}\r\n          step={4}\r\n          fractions={4}\r\n          initialRating={rating}\r\n          emptySymbol={(\r\n            <i\r\n              id=\"star-icon\"\r\n              className=\"bi bi-star\"\r\n            />\r\n          )}\r\n          fullSymbol={(\r\n            <i\r\n              id=\"star-icon\"\r\n              className=\"bi bi-star-fill\"\r\n            />\r\n          )}\r\n          readonly=\"true\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverallRating;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ReviewSpread = (props) => {\r\n  const [{ ratingBreakdown }] = useState(props);\r\n  const [{ recommendation }] = useState(props);\r\n  const populateBar = () => {\r\n    const arr = [];\r\n    for (let i = 1; i < 6; i += 1) {\r\n      const emptyBar = {\r\n        marginLeft: '20px',\r\n        marginTop: '7px',\r\n        height: 10,\r\n        width: '70%',\r\n        backgroundColor: '#959595',\r\n      };\r\n\r\n      const FillerBar = styled.div`\r\n        height: 100%;\r\n        background-color: #454545;\r\n        width: ${ratingBreakdown[i] * 20}%;\r\n        &:hover {\r\n          background-color: green;\r\n          width: ${(ratingBreakdown[i] * 20) + 2}%;\r\n        }\r\n      `;\r\n      arr.push(\r\n        <div\r\n          key={i}\r\n          style={{\r\n            display: 'flex',\r\n            marginTop: '30px',\r\n          }}\r\n        >\r\n          <div style={{\r\n            position: 'relative',\r\n            fontSize: '15px',\r\n          }}\r\n          >\r\n            <u>\r\n              {i}\r\n              {' '}\r\n              Stars\r\n            </u>\r\n          </div>\r\n          <div style={emptyBar}>\r\n            <FillerBar />\r\n          </div>\r\n        </div>,\r\n      );\r\n    }\r\n    return arr;\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ width: '100%' }}>\r\n        <p style={{ fontSize: '15px' }}>\r\n          {recommendation}\r\n          % of reviews recommend this product\r\n        </p>\r\n      </div>\r\n      <div style={{\r\n        height: '80%',\r\n        width: '100%',\r\n      }}\r\n      >\r\n        {populateBar()}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewSpread;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport 'react-widgets/styles.css';\r\nimport DropdownList from 'react-widgets/DropdownList';\r\nimport ReviewsList from './components/review-list/reviews-list';\r\nimport OverallRating from './components/breakdown/overall-rating';\r\nimport ReviewSpread from './components/breakdown/review-spread';\r\n\r\nconst Review = (props) => {\r\n  const [count, setCount] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const [sort, setSort] = useState('relevant');\r\n  const [{ productId }] = useState(props);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [product, setProduct] = useState('');\r\n  const [ratings, setRatings] = useState({\r\n    1: 0,\r\n    2: 0,\r\n    3: 0,\r\n    4: 0,\r\n    5: 0,\r\n  });\r\n  const [percentRecommend, setPercentRecommend] = useState(0);\r\n  const [totalRatings, setTotalRatings] = useState(0);\r\n  const mounted = useRef(true);\r\n\r\n  const handleRecommendation = () => {\r\n    let recommend = 0;\r\n    reviews.forEach((review) => {\r\n      if (review.recommend) recommend += 1;\r\n    });\r\n    setPercentRecommend((recommend / reviews.length) * 100);\r\n  };\r\n  const getReviews = () => {\r\n    const params = {\r\n      page,\r\n      count,\r\n      sort,\r\n      product_id: productId,\r\n    };\r\n    axios.get('reviews', { params })\r\n      .then(({ data }) => {\r\n        setCount(data.response.count);\r\n        setReviews([...data.response.results]);\r\n      })\r\n      .catch((err) => {\r\n        if (mounted.current) {\r\n          throw err;\r\n        }\r\n      });\r\n  };\r\n\r\n  const validate = () => {\r\n    if (reviews.length > 0) {\r\n      return (\r\n        <ReviewsList\r\n          key={JSON.stringify(reviews)}\r\n          reviews={reviews}\r\n          product={product}\r\n          productId={productId}\r\n        />\r\n      );\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const compileRatings = () => {\r\n    const nextRatings = {\r\n      1: 0,\r\n      2: 0,\r\n      3: 0,\r\n      4: 0,\r\n      5: 0,\r\n    };\r\n    let nextTotal = 0;\r\n    reviews.forEach((item) => {\r\n      nextRatings[item.rating] += 1;\r\n      nextTotal += item.rating;\r\n    });\r\n    setRatings({\r\n      ...ratings,\r\n      ...nextRatings,\r\n    });\r\n    setTotalRatings(nextTotal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReviews();\r\n    return () => { mounted.current = false; };\r\n  }, [sort]);\r\n\r\n  useEffect(() => {\r\n    if (reviews.length > 0) {\r\n      compileRatings();\r\n      handleRecommendation();\r\n    }\r\n  }, [reviews]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-inline-flex justify-content-end\">\r\n        <div style={{ marginLeft: '20px' }}>\r\n          <div style={{ margin: '5px auto' }}>\r\n            <OverallRating\r\n              key={totalRatings}\r\n              rating={Math.floor((totalRatings / reviews.length) * 4)}\r\n            />\r\n          </div>\r\n          <div style={{ width: '350px' }}>\r\n            <ReviewSpread\r\n              key={JSON.stringify(ratings)}\r\n              ratingBreakdown={ratings}\r\n              recommendation={percentRecommend}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{\r\n          marginLeft: '50px',\r\n          width: '70%',\r\n          marginTop: '20px',\r\n        }}\r\n        >\r\n          <div\r\n            id=\"review-sort\"\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <strong\r\n              style={{\r\n                marginTop: '5px',\r\n                marginLeft: '5px',\r\n              }}\r\n            >\r\n              {reviews.length}\r\n              {' '}\r\n              reviews, sorted by\r\n            </strong>\r\n            <div\r\n              id=\"dropdown-list\"\r\n              style={{\r\n                marginLeft: '5px',\r\n                marginBottom: '10px',\r\n              }}\r\n            >\r\n              <DropdownList\r\n                defaultValue=\"Relevant\"\r\n                data={['Helpful', 'Newest', 'Relevant']}\r\n                onChange={(val) => setSort(val.toLowerCase())}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div id=\"reviews-list\">\r\n            {validate()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n"],"sourceRoot":""}